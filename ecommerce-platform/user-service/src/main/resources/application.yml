server:
  port: 0 # random port

spring:
  application:
    name: user-service
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
#  datasource:
#    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#    driverClassName: org.h2.Driver
#    username: sa
#    password:
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
      path: /h2-console

eureka:
  # instance_id 부여 (scale-out 시 별도 설정 필요 X)
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  # Eureka Server 등록
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka

greeting:
  message: Welcome

logging:
  level:
    me.jsj.user.client: DEBUG

management:
  endpoints:
    web:
      exposure:
        # refresh: 설정 정보 갱신 | health: 애플리케이션 기동 상태 확인 | beans: 사용하는 빈 확인
        # httptrace: client 요청으로부터 microservice 호출 및 반환 상태 조회
        include: refresh, health, beans, busrefresh
